{
	"id": "915bbb3e554d8037582119eda4792bda",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/dataType.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ncontract DataTypes {\n    // boolean\n    // bool public hey;\n    // bool public no = true;\n    //\n    // unit unsigned integer - only positive numbers\n    // unit8 ranges => (0 to 2*8-1)\n    // uint8 ->255\n    // unit16 ->65535\n    // uint256 ->highest\n    // uint8 public u8 = 1;\n    // uint256 public u256 = 456;\n    // uint256 public u = 126; //automatically takes 256\n    //\n    // Negative numbers\n    //int256\n    //int128\n    // int8 public I8 = -1;\n    // int256 public i256 = -223;\n    // int256 public i = 1235;\n    //\n    //min and max value of a number\n    // int public minInt = type(int).min;\n    // int public maxInt = type(int).max;\n    //\n    // Array\n    // in soidity, the data types represent a sequence of bytes, so generally there are two types of bytes\n    // byte is more gass efficient than string\n    // -- fixed sized bytes arrays\n    // --dynamically sized bytes arrays\n    // when you define bytes in smart contract it represent dynamic byte\n    // bytes1 public a;\n    // bytes2 public b;\n    // bytes1 public c = 0xb5;\n    // bytes2 public d = 0x5665;\n    // bytes3 public e = 0x5665EA;\n    // bytes4 public f = 0x56654567;\n    //\n    // Address types\n    // address public hey;\n    // address public addr = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n    //\n    // Default data types\n    // there is no concept of undefined and null in solidity\n    // bool public defaultBool; // false\n    // uint public number; // 0\n    // int public defaultInt ; // 0\n    // address public addr; // 0x0000000000....\n    //\n    //\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract/dataType.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/dataType.sol\":58:1606  contract DataTypes {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/dataType.sol\":58:1606  contract DataTypes {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d4d978b17f86d5e7a0ddd029f4b84ae7edb63e6752147e0c301362d6c88476364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203d4d978b17f86d5e7a0ddd029f4b84ae7edb63e6752147e0c301362d6c88476364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0x4D SWAP8 DUP12 OR 0xF8 PUSH14 0x5E7A0DDD029F4B84AE7EDB63E675 0x21 SELFBALANCE 0xE0 0xC3 ADD CALLDATASIZE 0x2D PUSH13 0x88476364736F6C634300080D00 CALLER ",
							"sourceMap": "58:1548:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203d4d978b17f86d5e7a0ddd029f4b84ae7edb63e6752147e0c301362d6c88476364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0x4D SWAP8 DUP12 OR 0xF8 PUSH14 0x5E7A0DDD029F4B84AE7EDB63E675 0x21 SELFBALANCE 0xE0 0xC3 ADD CALLDATASIZE 0x2D PUSH13 0x88476364736F6C634300080D00 CALLER ",
							"sourceMap": "58:1548:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1606,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d4d978b17f86d5e7a0ddd029f4b84ae7edb63e6752147e0c301362d6c88476364736f6c634300080d0033",
									".code": [
										{
											"begin": 58,
											"end": 1606,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1606,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/dataType.sol\":\"DataTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/dataType.sol\":{\"keccak256\":\"0x0001b946bbe5f418097270409de85b3a648603df6b39eb0656e37d3d3ffec297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38a55ff625ba939b7a706881abc03c9ca2abf0a967112ae89545d307af663af7\",\"dweb:/ipfs/QmUfxtbK4xSD78DcG3G9k5AK8LWeF3oexTKTFow3cbaDZv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract/dataType.sol": {
				"ast": {
					"absolutePath": "contract/dataType.sol",
					"exportedSymbols": {
						"DataTypes": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "DataTypes",
							"nameLocation": "67:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "58:1548:0",
							"usedErrors": []
						}
					],
					"src": "32:1575:0"
				},
				"id": 0
			}
		}
	}
}